/*
 * BC_Expression_Base.h
 *
 *  Created on: Dec 11, 2017
 *      Author: joseph
 */

#ifndef EXPRESSION_BASE_H_
#define EXPRESSION_BASE_H_
namespace BC {

template<class T, class derived>
struct expression {
	using type = derived;
	using scalar_type = T;
};



template<class... params>  struct expression_packet;
template<class param, class... params>  struct expression_packet<param, params...> : expression_packet<params...> {
	 param p;
};
template<class... params>  struct expression_packet;
template<class param>  struct expression_packet<param, params...> {
	 param p;
};

template<class... params>
auto expressionPacket(const params&... p) {
	return expression_packet<p...>(p...);
}

}

#endif /* EXPRESSION_BASE_H_ */
