/*
 * BC_Tensor_Lv4_Math_Advanced.h
 *
 *  Created on: Dec 12, 2017
 *      Author: joseph
 */

#ifndef BC_TENSOR_LV3_EXPRESSION_UTILITY_H_
#define BC_TENSOR_LV3_EXPRESSION_UTILITY_H_

#include "BC_Tensor_Lv2_Type.h"

template<
class T,									//The internal array type
class derived,									//The derived class
class math_lib,					    		    //Math_library
class inner_shape,
class outer_shape>
struct BC_Tensor_Utility_Expression : public Tensor_Type<T, derived, math_lib, Tensor_Shape<inner_shape, outer_shape>, false> {

	BC_Tensor_Utility_Expression() = default;
	template<class ... params> BC_Tensor_Utility_Expression(params& ... p) :
		Tensor_Type<T, derived, math_lib, Tensor_Shape<inner_shape, outer_shape>, false>(p...) {
	}

};

#endif /* BC_TENSOR_LV3_EXPRESSION_UTILITY_H_ */
